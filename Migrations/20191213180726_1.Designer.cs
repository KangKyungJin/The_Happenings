// <auto-generated />
using System;
using CSharpBeltTest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharpBeltTest.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20191213180726_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharpBeltTest.Models.Attending", b =>
                {
                    b.Property<int>("AttendingId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("HappeningId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("AttendingId");

                    b.HasIndex("HappeningId");

                    b.HasIndex("UserId");

                    b.ToTable("Attendings");
                });

            modelBuilder.Entity("CSharpBeltTest.Models.Happening", b =>
                {
                    b.Property<int>("HappeningId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Desc")
                        .IsRequired();

                    b.Property<string>("DurationD")
                        .IsRequired();

                    b.Property<int>("DurationT");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("Time");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("HappeningId");

                    b.HasIndex("UserId");

                    b.ToTable("Happenings");
                });

            modelBuilder.Entity("CSharpBeltTest.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CSharpBeltTest.Models.Attending", b =>
                {
                    b.HasOne("CSharpBeltTest.Models.Happening", "Happening")
                        .WithMany("Coming")
                        .HasForeignKey("HappeningId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSharpBeltTest.Models.User", "User")
                        .WithMany("Going")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CSharpBeltTest.Models.Happening", b =>
                {
                    b.HasOne("CSharpBeltTest.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
